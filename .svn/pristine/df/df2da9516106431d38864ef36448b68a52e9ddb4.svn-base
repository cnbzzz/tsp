package cn.spacewalker.tsp.bg.receiver.service.impl;

import cn.spacewalker.tsp.bg.pojo.dto.Gbt32960Msg;
import cn.spacewalker.tsp.bg.pojo.mapper.TRepVehinfoMapper;
import cn.spacewalker.tsp.bg.pojo.mapper.TVehSigninMapper;
import cn.spacewalker.tsp.bg.pojo.model.TRepVehinfo;
import cn.spacewalker.tsp.bg.pojo.model.TVehSignin;
import cn.spacewalker.tsp.bg.pojo.utils.Gbt32960ReadByteBuf;
import cn.spacewalker.tsp.bg.receiver.service.ICommandService;
import com.google.common.base.Preconditions;

import javax.annotation.Resource;
import java.util.Date;
import java.util.List;

/**
 * This file is part of lightsaber Project
 * Created by bzzz (bzzz@space-walker.cn) on 2017/7/17 17:18
 * Copyright (c) 2017 www.space-walker.cn
 *
 */
public class VehSignInServiceImpl implements ICommandService {

    @Resource
    private TVehSigninMapper mapper;

    @Resource
    private TRepVehinfoMapper repVehinfoMapper;

    public TVehSignin handler(Gbt32960Msg msg){
        Preconditions.checkArgument(msg != null, "msg is null");
        byte[] bytes = msg.getContent();
        Preconditions.checkArgument(bytes != null && bytes.length > 30, "bytes is not legal");

        Gbt32960ReadByteBuf buf = new Gbt32960ReadByteBuf(bytes);
        int year = buf.readByte2Int();
        int month = buf.readByte2Int();
        int day = buf.readByte2Int();
        int hour = buf.readByte2Int();
        int minute = buf.readByte2Int();
        int second = buf.readByte2Int();
        String gatherTime = String.format("%s%s%s%s%s%s", year, month, day, hour, minute, second);

        int signInFormNum = buf.readWord();

        String iccid = buf.readString(20, "GBK");

        int chargeNum = buf.readByte2Int();

        int systemCodeLength = buf.readByte2Int();

        int i = chargeNum * systemCodeLength;

        String systemCode = null;
        if(i > 0){
            systemCode = buf.readString(i, "GBK");
        }

        TVehSignin data = new TVehSignin();
        data.setGatherTime(gatherTime);
        data.setSignInFormNum(signInFormNum);
        data.setIccid(iccid);
        data.setChargeNum(chargeNum);
        data.setSystemCodeLength(systemCodeLength);
        data.setSystemCode(systemCode);
        String formNum = msg.getFormNum();

        data.setOid(formNum);
        String vin = msg.getVin();
        data.setVin(vin);
        data.setFormNum(formNum);

        mapper.insertSelective(data);

        TRepVehinfo param = new TRepVehinfo();
        param.setVin(vin);

        List<TRepVehinfo> select = repVehinfoMapper.select(param);
        if(select.size() > 0){
            TRepVehinfo vehinfo = select.get(0);
            vehinfo.setIsOnline(1);
            repVehinfoMapper.updateByPrimaryKeySelective(vehinfo);
        } else{
            TRepVehinfo vehinfo = new TRepVehinfo();
            vehinfo.setVin(vin);
            vehinfo.setIccid(iccid);
            vehinfo.setIsOnline(1);
            vehinfo.setLastLoginTime(new Date());
            vehinfo.setOid(formNum);
            repVehinfoMapper.insertSelective(vehinfo);
        }

        return data;
    }
}
